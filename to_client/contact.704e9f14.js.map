{"mappings":"UAYUA,G,kBAEFC,SAAY,SAAKC,G,IACfC,EAAIH,EAAQI,OAAM,CAClBC,SAAI,G,OACE,S,eAEAC,MAAA,W,IACJC,EAAIP,EAAAQ,MA2BVD,EAAAE,UA1BoB,WAgBd,IAfA,IAAIC,EAAS,GAETC,GADAJ,EAAYK,OACZL,EAAAM,QACJC,EAAA,QAAAC,KAAAJ,GACKK,EAAU,QAAAD,KAAWJ,GAExBM,GADAN,EAAIA,EAASO,QAAS,SAClBf,EACFE,UAEFc,EACEH,GAAOL,EAAeS,MAAK,SAAO,IAAQR,OACxC,EAINS,EAAAJ,EAAAI,GAAA,EAAAA,IAAA,CACI,IAAAC,EAAAC,SAAmBZ,EAAYM,EAAAI,GAEjC,GADAL,IAAWM,EAAQE,WAAKb,EAAAM,EAAAI,GAAAI,QAAAN,IACxBL,EAAW,oBAAkBC,KAASO,EAAQI,aAAAJ,IAAAI,WAAAR,QAAA,wBAChDR,EAAAiB,QAAAL,EACA,CACA,IAAAM,EAAe,W,kBACjBC,WAAAD,EAAqBzB,EAAAE,SACrB,EAA+BwB,WAAQD,EAAAzB,EAAAE,S,GAE3C,CACAyB,OAAA,O","sources":["src/js/rcounterup.js"],"sourcesContent":["    /**\r\n   * Jquery.rcounter.js \r\n   * Version: 1.0.0\r\n   * Author: Sharifur\r\n   * Inspired By Benjamin Intal\r\n   * */\r\n\r\n     (function ($) {\r\n      'use strict';\r\n      $.fn.rCounter = function (options) {\r\n        var settings = $.extend({\r\n          duration: 20,\r\n          easing: 'swing',\r\n        }, options);\r\n        return this.each(function () {\r\n          var $this = $(this);\r\n          var startCounter = function () {\r\n            var numbers = [];\r\n            var length = $this.length;\r\n            var number = $this.text();\r\n            var isComma = /[,\\-]/.test(number);\r\n            var isFloat = /[,\\-]/.test(number);\r\n            var number = number.replace(/,/g, '');\r\n            var divisions = settings.duration;\r\n            var decimalPlaces = isFloat ? (number.split('.')[1] || []).length : 0;\r\n            // make number string to array for displaying counterup\r\n            for (var rcn = divisions; rcn >= 1; rcn--) {\r\n              var newNum = parseInt(number / divisions * rcn);\r\n              if (isFloat) {\r\n                newNum = parseFloat(number / divisions * rcn).toFixed(decimalPlaces);\r\n              }\r\n              if (isComma) {\r\n                while (/(\\d+)(\\d{3})/.test(newNum.toString())) {\r\n                  newNum = newNum.toString().replace(/(\\d+)(\\d{3})/, '$1' + ',' + '$2');\r\n                }\r\n              }\r\n              numbers.unshift(newNum);\r\n            }\r\n            var counterUpDisplay = function () {\r\n              $this.text(numbers.shift());\r\n              setTimeout(counterUpDisplay, settings.duration);\r\n            };\r\n            setTimeout(counterUpDisplay, settings.duration);\r\n          } // end function\r\n          //bind with waypoints\r\n          $this.waypoint(startCounter, { offset: '100%', triggerOnce: true });\r\n        });\r\n      }\r\n    }(jQuery));"],"names":["$","rCounter","options","settings","extend","duration","each","$this","this","waypoint","numbers","number","length","text","isComma","test","isFloat","divisions","replace","decimalPlaces","split","rcn","newNum","parseInt","parseFloat","toFixed","toString","unshift","counterUpDisplay","setTimeout","offset"],"version":3,"file":"contact.704e9f14.js.map"}