{"mappings":"AACAA,EAAE,oBAAoBC,aAAa,CACjCC,YAAa,uEACbC,eAAgB,OAElB,IAAIC,MAAQC,SAASC,cAAc,oBAC/BC,IAAMP,EAAE,oBAAoBC,aAAa,CAC3CC,YAAa,uEACbC,eAAgB,OAgClB,SAASK,qBAAqBC,EAASC,GACrC,IAAIC,EAAiBF,EAAQG,QAAQ,eAAeC,KAAK,qBACzDT,MAAQK,EAAQK,IAAI,GAChBJ,GAEFN,MAAMW,kBAAkB,IAEtBL,GAAiBN,MAAMY,SAASC,OAClCb,MAAMW,kBAAkB,IACxBJ,EAAeO,SAEfP,EAAeQ,KAAK,wBACpBf,MAAMW,kBAAkB,WACpBf,EAAE,QAAQoB,SAAS,kBACrBT,EAAeU,OAGrB,EA5CC,SAAUC,GACTA,EAAE,kBAAkBC,GAAG,UAAU,SAAUC,GACzCA,EAAEC,iBACFD,EAAEE,kBACSJ,EAAEK,MAAMb,IAAI,GACvBQ,EAAE,QAAQM,SAAS,iBAEnBN,EAAE,mBAAmBO,MAAK,WACxB,IAAIC,EAAWR,EAAEK,MAAMb,IAAI,GACvBQ,EAAEK,MAAMI,KAAK,cAAgBD,EAASE,iBACxCV,EAAEK,MAAMf,QAAQ,eAAeC,KAAK,qBAAqBQ,MAE7D,GACF,IAEAjB,MAAM6B,iBAAiB,iBAAiB,WACtC,IAAIvB,EAAgBH,IAAIG,gBACxBF,qBAAqBc,EAAEK,MAAOjB,EAChC,IAEAY,EAAE,kBAAkBC,GAAG,QAAS,cAAc,SAAUW,GACtD,IAAIxB,EAAgBH,IAAIG,gBACxBF,qBAAqBc,EAAEK,MAAOjB,EAChC,GAEF,CAzBC,CAyBEyB","sources":["src/js/phone.js"],"sourcesContent":["// int-tel-input \r\n$(\"#anything_mobile\").intlTelInput({\r\n  utilsScript: \"https://cdn.jsdelivr.net/npm/intl-tel-input@16.0.3/build/js/utils.js\",\r\n  initialCountry: \"In\",\r\n});\r\nvar input = document.querySelector(\"#anything_mobile\");\r\nvar iti = $(\"#anything_mobile\").intlTelInput({\r\n  utilsScript: \"https://cdn.jsdelivr.net/npm/intl-tel-input@16.0.3/build/js/utils.js\",\r\n  initialCountry: \"In\",\r\n});\r\n// store the instance variable so we can access it in the console e.g. window.iti.getNumber()\r\n// window.iti = iti;\r\n\r\n(function ($) {\r\n  $('.specific-form').on('submit', function (e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    let form = $(this).get(0);\r\n    $('form').addClass('was-validated');\r\n    //Need to display invalid feedback explicitly on submit for input fields due to plugin changing structure\r\n    $('form .tel-input').each(function () {\r\n      let telInput = $(this).get(0);\r\n      if ($(this).prop('required') && !telInput.checkValidity()) {\r\n        $(this).parents('.form-group').find('.invalid-feedback').show();\r\n      }\r\n    });\r\n  });\r\n\r\n  input.addEventListener(\"countrychange\", function () {\r\n    let isValidNumber = iti.isValidNumber();\r\n    checkPhoneValidation($(this), isValidNumber);\r\n  });\r\n\r\n  $('.specific-form').on('keyup', '.tel-input', function (event) {\r\n    let isValidNumber = iti.isValidNumber();\r\n    checkPhoneValidation($(this), isValidNumber);\r\n  });\r\n\r\n})(jQuery);\r\n\r\nfunction checkPhoneValidation(element, isValidNumber) {\r\n  let invFeedbackDiv = element.parents('.form-group').find('.invalid-feedback');\r\n  input = element.get(0);\r\n  if (isValidNumber) {\r\n    //need to set this first as otherwise input validity is falsely linking to custom error\r\n    input.setCustomValidity('');\r\n  }\r\n  if (isValidNumber && input.validity.valid) {\r\n    input.setCustomValidity('');\r\n    invFeedbackDiv.hide();\r\n  } else {\r\n    invFeedbackDiv.html('Invalid phone number');\r\n    input.setCustomValidity('invalid');\r\n    if ($('form').hasClass('was-validated')) {\r\n      invFeedbackDiv.show();\r\n    }\r\n  }\r\n}"],"names":["$","intlTelInput","utilsScript","initialCountry","input","document","querySelector","iti","checkPhoneValidation","element","isValidNumber","invFeedbackDiv","parents","find","get","setCustomValidity","validity","valid","hide","html","hasClass","show","$1","on","e","preventDefault","stopPropagation","this","addClass","each","telInput","prop","checkValidity","addEventListener","event","jQuery"],"version":3,"file":"application-anti-fungal-and-pharma.6bb0154c.js.map"}